
#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS: [a4paper]

#+LATEX_HEADER: \usepackage{kotex}
#+LATEX_HEADER: \usepackage{CJKutf8}

#+LATEX_HEADER: \usepackage[utf8]{inputenc}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage[scale=0.75,twoside,bindingoffset=5mm]{geometry}
#+LATEX_HEADER: \usepackage[onehalfspacing]{setspace}






* Function 
#+BEGIN_SRC python 
def name(self,prameter1, parameter2, ...):

    return value
#+END_SRC

Fuction과 method는 다르다. method는 class 내부에 정의된 함수를 의미한다. 

** summary




** 함수 정의 예제
   
#+BEGIN_SRC python
def info_my_car(manufacturer, door=4, type="sedan"):
    print("mycar is made by", manufacturer, "door is ", door, "type is", type 

info_my_car("현대차")
info_my_car("현대차", 4)
info_my_car(door=4, type="cool", manufacturer="대우")

#+END_SRC

주의 할 것은 defalut-factor가 지정 되었을때 오른쪽부터 채워가야 된다. 이 함수를 호출 할 때 가급적 Default Value를 명시해주는게 좋다는것이다. 


** Parameter

*** defalut parameter

*** tuple , dicionary 
    - tuple은 *을 붙여준다.
    - dictionary는 **를 붙여준다. 

      #+BEGIN_SRC python

# tuple, dictionary 사용하기 

def family(name, *family, **family_info):
    print("My name is " , name, ".")
    print("My family ")
    for name in family:
        print(name)

    for key in family_info:
        print(key, " : ", family_info[key])


family("Rny", "me", "father","mother", house="busan", slogun="fight")


My name is  Rny .
My family 
me
father
mother
house  :  busan
slogun  :  fight

      #+END_SRC


- join 함수 

String에 다음과 같은 문자열을 삽입할 수 있다. 

#+BEGIN_EXAMPLE
월화수목금토일
월, 화, 수, 목, 금, 토, 일
#+END_EXAMPLE


#+BEGIN_SRC python
a=", "
b="money"
print(a.join(b))

m, o, n, e, y
#+END_SRC

** function parameter-List Unpacking


#+BEGIN_SRC python
a=list(range(1,5))
print(a)

args=[3,6]
list(range(*args))
#+END_SRC

Range(start, end)는 $start<=x<end$인 리스트를 반환한다. 그런데 우리가 parameter로 list를 받는 경우 *를 붙이기로 했으므로 위와 같은 코드도 가능하다. 

#+BEGIN_SRC python
#4 use unpacking 함수
def intro_my_car(manufacturer, doors=4, type="sedan"):
    print("my car is made by company:  ", manufacturer, "which have", doors, "type is ", type)

## 사전형 변수를 만들어서 입
input={"manufacturer":"hyendae", "doors":4, "type":"SUV"}

intro_my_car(**input)
#+END_SRC
위의 코드는 인자로 dictionary type을 넣는 경우를 볼 수 있다. 


** 변수의 유효범위

   - Local variable
   - Global variable

** Global Variable(#6)
funtion외부에서 설정된 변수는 전부 global variable로 설정된다. 
 
#+BEGIN_SRC python
#6 Global variable
param="this is param"

def my_func():
    print(param)
    print(id(param))

#+END_SRC


** 큰 따옴표(3*")

   함수의 Documentation은 아래와 같이 사용한다. 

#+BEGIN_SRC python
def functionname():
    """definition"""
print(functioname.__doc__)
#+END_SRC



