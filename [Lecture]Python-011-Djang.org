



* TODO Django_Basic


** 환경설정 

*** Django설치
    #+BEGIN_SRC shell
    pip install --upgrade pip
    pip install django
    #+END_SRC

   
*** SQLite3 Viewer 설치
    http://sqlitebrowser.org
    #+BEGIN_SRC shell
    brew cask install sqlitebrowser
    #+END_SRC

** project folder 생성

   #+BEGIN_SRC shell
   django-admin startproject {project_name}
   #+END_SRC
   
   django-admin startproject는 다음과 같은 파일을 생성한다. 
   #+BEGIN_EXAMPLE
   mysite/
    manage.py
    mysite/
        __init__.py
        settings.py
        urls.py
        wsgi.py
   #+END_EXAMPLE

*** 상세설명

- 제일 바깥의 projecname(mysite)/ 루트 디렉토리는 프로젝트 폴더로 Django에 상관 없다.
- manage.py : Django 프로젝트에 대한 여러가지 조작을 하기 위해서 conmmand line utility를 정의 해두었다. 자세히는 django-admin, manage.py를 살펴보면 좋다. 
- 안쪽의 projectname(mysite)/ 는 프로젝트의 진짜 Python package이다. 이 이름이 파이썬 패키지의 이름이고 import시 사용하는 이름이다. (예를 들어 import mysite.urls)
- mysite/__init__.py : 이 디렉토리가 파이썬 패키지 임을 파이썬에게 알리기 위한 공백 파일이다. 
- mysite/settings.py: Django 프로젝트의 설정 파일이다. 
- mysite/urls.py: Django 프로젝트의 URL 선언, 또는 Django 사이트에 있어서 목차에 상당한다. 상세사항은 URL dispatcher를 참조 하시오 
- mysite/wsgi.py : 프로젝트를 서브하기 위해서 WSGI호환 web 서버와의 엔트리포인트이다. 
** Server Start

   #+BEGIN_SRC shell
   python manage.py runserver
   #+END_SRC
   
  

   #+CAPTION: sucess server start
   #+ATTR_HTML: width "100px"
   #+ATTR_ORG: width 100
   [[/Users/nk/Dropbox/App/001-ORGMODE/Image/2016-12-22327.png]]

** poll application을 만든다.  
   이것으로 자신의 환경, 프로젝트가 생성 되었고 작업을 준비가 되었다. Django내의 추가되는 각 어플리케이션은 이하의 규칙에 따라 python 패키지로 구성된다. Django에는 기본적인 디렉토리구조를 자동으로 생성하는 유틸리티가 포함 되어 있으므로, 디렉토리를 만드는것이 아닌 코드를 쓰는것에 집중할 수 있다. 

   

   #+CAPTION: Application/Project
   #+ATTR_HTML: width "100px"
   #+ATTR_ORG: width 100
   [[/Users/nk/Dropbox/App/001-ORGMODE/Image/2016-12-261131.png]]

 
   #+BEGIN_EXAMPLE
   프로젝트와 어플리케이션의 차이점
   어플리케이션은 실제로 처리를 하는 web 어플리케이션을 가리킨다. 예를들어 프로그래머나 공개 레코드의 데이터베이스 단순한 투표 
   어플리케이션 같은것이다. 프로젝트는 어떤 웹사이트에 맞는 설정과 어클리케이션을 모아놓은 것을 의미한다. 프로젝트는 복수의 어플리케이션이 포함된다. 
   #+END_EXAMPLE

   
   #+BEGIN_SRC shell
   python manage.py startapp polls
   #+END_SRC
   위와 같이 작성하면 polls dir가 생성되고 내부구조는 다음과 같다. 
   
   #+BEGIN_EXAMPLE
   polls/
    __init__.py
    admin.py
    apps.py
    migrations/
        __init__.py
    models.py
    tests.py
    views.py
   #+END_EXAMPLE


  #+BEGIN_SRC python
  #polls/views.py 
  from djang.http import HttpResponse
  # Create your views here.

  def index(request):
      return HttpResponse("Hello, world. You're at the polls index.")
  #+END_SRC

  #+BEGIN_SRC python
  #urls.py
  urlpatterns = [
    url(r"^polls/", include("polls.urls"))
  ]
  #+END_SRC

** superuser를 생성한다. 
   python은 자동으로 로그인 페이지를 생성해준다. 

** Application을 추가해보자



#+BEGIN_SRC python
#####setting.py######
INSTALLED_APPS = [
'{application name}.Apps.{Appname}Config <---
.....
#+END_SRC

  

** 예제코드 폴더 트리 

   

   #+CAPTION: folder-tree
   #+ATTR_HTML: width "100px"
   #+ATTR_ORG: width 100
   
   [[/Users/nk/Dropbox/App/001-ORGMODE/Image/2016-12-22411.png]]



** 예제 polls 생성

*** ch03/settings.py

*** model.py
 
#+BEGIN_SRC python

# file name : ch03/polls/models.py

# 모델과 관련된 작업을 한다.
# 데이터베이트스 작업을 수행


from django.db import models


# Create your models here.

class Question(models.Model):
    question_text = models.CharField(max_length=200)
    pub_date = models.DateTimeField('date pulbished')

    def __str__(self):
        return self.question_text


class Choice(models.Model):
    question = models.ForeignKey(Question)
    choice_text = models.CharField(max_length=200)
    votes = models.IntegerField(default=0)

    def __str__(self):
        return self.choice_text



#+END_SRC

*** admin.py

#+BEGIN_SRC python
# file name : ch03/polls/admin.py

from django.contrib import admin

# Register your models here.
# admin 페이지에서의 동작을 등록

from polls.models  import Question, Choice

admin.site.register(Question)
admin.site.register(Choice)

#+END_SRC


#+BEGIN_SRC shell
$ python manage.py makemigrations

$ python manage.py migrate

$ python manage.py runserver 0.0.0.0:8888
#+END_SRC

** Reference



- [[https://docs.djangoproject.com/ja/1.10/intro/tutorial01/][はじめての Django アプリ作成、その 1 | Django documentation | Django]]

